{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-22T10:51:18.079Z",
    "end": "2023-11-22T10:51:27.950Z",
    "duration": 9871,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36291d9f-8341-43bd-8711-81078cf2ed8b",
      "title": "",
      "fullFile": "C:\\Users\\paulo\\Desktop\\selenium02\\test\\secondTest.js",
      "file": "\\test\\secondTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5cf6de48-7224-4a56-8c72-5f075ee6cf66",
          "title": "Segundo teste",
          "fullFile": "C:\\Users\\paulo\\Desktop\\selenium02\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Primeiro caso de teste",
              "fullTitle": "Segundo teste Primeiro caso de teste",
              "timedOut": null,
              "duration": 5192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador\n        let driver = await new Builder().forBrowser(\"firefox\").build()\n        \n        //Navegar ate o site\n        await driver.get(\"https://herziopinto.github.io/lista-de-tarefas/\")\n        \n        //Dar uma pausa na execucao da funcao\n        await driver.sleep(2000)\n        \n        //Digitar a nova tarefa e enter\n        \n        let itens = (\"Aprender automacao com selenium\")\n        \n        //Item 1\n        await driver.findElement(By.id(\"inputTask\")).sendKeys(\"Aprender automacao com selenium\", Key.RETURN)\n        \n        //Assertion\n        let seleniumText = await driver.findElement(By.xpath(\"/html/body/div/section/ul/li/label\")).getText().then(function(value){\n            return value\n        })  \n        \n        //Assertion usando o node puro\n        assert.strictEqual(seleniumText, (\"Aprender automacao com selenium\"))\n        \n        //Assertion usando Chai\n        seleniumText.should.equal(\"Aprender automacao com selenium\")\n        \n        //Fechar o navegador\n         await driver.quit()",
              "err": {},
              "uuid": "bfad489b-dd73-4d67-9ea7-aff4fc5ec9a9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Segundo caso de teste",
              "fullTitle": "Segundo teste Segundo caso de teste",
              "timedOut": null,
              "duration": 4411,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador\n        let driver = await new Builder().forBrowser(\"firefox\").build()\n        \n        //Navegar ate o site\n        await driver.get(\"https://herziopinto.github.io/lista-de-tarefas/\")\n        \n        //Dar uma pausa na execucao da funcao\n        await driver.sleep(2000)\n        \n        //Digitar a nova tarefa e enter\n        \n        let itens = (\"Aprender automacao com selenium\")\n        \n        //Item 1\n        await driver.findElement(By.id(\"inputTask\")).sendKeys(\"Aprender automacao com selenium\", Key.RETURN)\n        \n        //Assertion\n        let seleniumText = await driver.findElement(By.xpath(\"/html/body/div/section/ul/li/label\")).getText().then(function(value){\n            return value\n        })  \n        \n        //Assertion usando o node puro\n        assert.strictEqual(seleniumText, (\"Aprender automacao com selenium\"))\n        \n        //Assertion usando Chai\n        seleniumText.should.equal(\"Aprender automacao no JS\")\n        \n        //Fechar o navegador\n         await driver.quit()",
              "err": {
                "message": "AssertionError: expected 'Aprender automacao com selenium' to equal 'Aprender automacao no JS'",
                "estack": "AssertionError: expected 'Aprender automacao com selenium' to equal 'Aprender automacao no JS'\n    at Context.<anonymous> (test\\secondTest.js:69:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Aprender automacao com selenium\n+ Aprender automacao no JS\n"
              },
              "uuid": "529baec1-60b1-4f7f-b639-d6828bb6688a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfad489b-dd73-4d67-9ea7-aff4fc5ec9a9"
          ],
          "failures": [
            "529baec1-60b1-4f7f-b639-d6828bb6688a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9603,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}